{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst authenticateInitialState = {\n  nameIsValid: false,\n  emailIsValid: false,\n  passwordIsValid: false,\n  phoneIsValid: false,\n  nameIsTouched: true,\n  emailIsTouched: true,\n  passwordIsTouched: true,\n  phoneIsTouched: true\n};\nfunction validatePhoneNumber(input_str) {\n  var re = /^\\(?(\\d{3})\\)?[- ]?(\\d{3})[- ]?(\\d{4})$/;\n  return re.test(input_str);\n}\nconst authenticateSlice = createSlice({\n  name: \"authenticate\",\n  initialState: authenticateInitialState,\n  reducers: {\n    setNameIstouched(state) {\n      state.nameIsTouched = true;\n    },\n    setEmailIsTouched(state) {\n      state.emailIsTouched = true;\n    },\n    setPasswordIsTouched(state) {\n      state.passwordIsTouched = true;\n    },\n    setPhoneIsTouched(state) {\n      state.phoneIsTouched = true;\n    },\n    fullnameValidation(state, payload) {\n      if (payload.payload.trim() !== \"\") {\n        state.nameIsValid = true;\n        state.nameIsTouched = false;\n      } else {\n        state.nameIsValid = false;\n        state.nameIsTouched = false;\n      }\n    },\n    emailValidation(state, payload) {\n      if (payload.payload.includes(\"@\")) {\n        state.emailIsValid = true;\n        state.emailIsTouched = false;\n      } else {\n        state.emailIsValid = false;\n        state.emailIsTouched = false;\n      }\n    },\n    passwordValidation(state, payload) {\n      if (payload.payload.length > 8) {\n        state.passwordIsValid = true;\n        state.passwordIsTouched = false;\n      } else {\n        state.passwordIsValid = false;\n        state.passwordIsTouched = false;\n      }\n    },\n    phoneValidation(state, payload) {\n      if (validatePhoneNumber(payload.payload)) {\n        state.phoneIsValid = true;\n        state.phoneIsTouched = false;\n      } else {\n        state.phoneIsValid = false;\n        state.phoneIsTouched = false;\n      }\n    }\n  }\n});\nexport default authenticateSlice.reducer;\nexport const authenticateActions = authenticateSlice.actions;","map":{"version":3,"names":["createSlice","authenticateInitialState","nameIsValid","emailIsValid","passwordIsValid","phoneIsValid","nameIsTouched","emailIsTouched","passwordIsTouched","phoneIsTouched","validatePhoneNumber","input_str","re","test","authenticateSlice","name","initialState","reducers","setNameIstouched","state","setEmailIsTouched","setPasswordIsTouched","setPhoneIsTouched","fullnameValidation","payload","trim","emailValidation","includes","passwordValidation","length","phoneValidation","reducer","authenticateActions","actions"],"sources":["D:/ReactJS/Assignment 03/rjs-asm03/src/store/authenticateSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst authenticateInitialState = {\r\n  nameIsValid: false,\r\n  emailIsValid: false,\r\n  passwordIsValid: false,\r\n  phoneIsValid: false,\r\n  nameIsTouched: true,\r\n  emailIsTouched: true,\r\n  passwordIsTouched: true,\r\n  phoneIsTouched: true,\r\n};\r\n\r\nfunction validatePhoneNumber(input_str) {\r\n  var re = /^\\(?(\\d{3})\\)?[- ]?(\\d{3})[- ]?(\\d{4})$/;\r\n\r\n  return re.test(input_str);\r\n}\r\n\r\nconst authenticateSlice = createSlice({\r\n  name: \"authenticate\",\r\n  initialState: authenticateInitialState,\r\n  reducers: {\r\n    setNameIstouched(state) {\r\n      state.nameIsTouched = true;\r\n    },\r\n    setEmailIsTouched(state) {\r\n      state.emailIsTouched = true;\r\n    },\r\n    setPasswordIsTouched(state) {\r\n      state.passwordIsTouched = true;\r\n    },\r\n    setPhoneIsTouched(state) {\r\n      state.phoneIsTouched = true;\r\n    },\r\n\r\n    fullnameValidation(state, payload) {\r\n      if (payload.payload.trim() !== \"\") {\r\n        state.nameIsValid = true;\r\n        state.nameIsTouched = false;\r\n      } else {\r\n        state.nameIsValid = false;\r\n        state.nameIsTouched = false;\r\n      }\r\n    },\r\n    emailValidation(state, payload) {\r\n      if (payload.payload.includes(\"@\")) {\r\n        state.emailIsValid = true;\r\n        state.emailIsTouched = false;\r\n      } else {\r\n        state.emailIsValid = false;\r\n        state.emailIsTouched = false;\r\n      }\r\n    },\r\n    passwordValidation(state, payload) {\r\n      if (payload.payload.length > 8) {\r\n        state.passwordIsValid = true;\r\n        state.passwordIsTouched = false;\r\n      } else {\r\n        state.passwordIsValid = false;\r\n        state.passwordIsTouched = false;\r\n      }\r\n    },\r\n    phoneValidation(state, payload) {\r\n      if (validatePhoneNumber(payload.payload)) {\r\n        state.phoneIsValid = true;\r\n        state.phoneIsTouched = false;\r\n      } else {\r\n        state.phoneIsValid = false;\r\n        state.phoneIsTouched = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default authenticateSlice.reducer;\r\n\r\nexport const authenticateActions = authenticateSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,wBAAwB,GAAG;EAC/BC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE,KAAK;EACnBC,eAAe,EAAE,KAAK;EACtBC,YAAY,EAAE,KAAK;EACnBC,aAAa,EAAE,IAAI;EACnBC,cAAc,EAAE,IAAI;EACpBC,iBAAiB,EAAE,IAAI;EACvBC,cAAc,EAAE;AAClB,CAAC;AAED,SAASC,mBAAmBA,CAACC,SAAS,EAAE;EACtC,IAAIC,EAAE,GAAG,yCAAyC;EAElD,OAAOA,EAAE,CAACC,IAAI,CAACF,SAAS,CAAC;AAC3B;AAEA,MAAMG,iBAAiB,GAAGd,WAAW,CAAC;EACpCe,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAEf,wBAAwB;EACtCgB,QAAQ,EAAE;IACRC,gBAAgBA,CAACC,KAAK,EAAE;MACtBA,KAAK,CAACb,aAAa,GAAG,IAAI;IAC5B,CAAC;IACDc,iBAAiBA,CAACD,KAAK,EAAE;MACvBA,KAAK,CAACZ,cAAc,GAAG,IAAI;IAC7B,CAAC;IACDc,oBAAoBA,CAACF,KAAK,EAAE;MAC1BA,KAAK,CAACX,iBAAiB,GAAG,IAAI;IAChC,CAAC;IACDc,iBAAiBA,CAACH,KAAK,EAAE;MACvBA,KAAK,CAACV,cAAc,GAAG,IAAI;IAC7B,CAAC;IAEDc,kBAAkBA,CAACJ,KAAK,EAAEK,OAAO,EAAE;MACjC,IAAIA,OAAO,CAACA,OAAO,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACjCN,KAAK,CAACjB,WAAW,GAAG,IAAI;QACxBiB,KAAK,CAACb,aAAa,GAAG,KAAK;MAC7B,CAAC,MAAM;QACLa,KAAK,CAACjB,WAAW,GAAG,KAAK;QACzBiB,KAAK,CAACb,aAAa,GAAG,KAAK;MAC7B;IACF,CAAC;IACDoB,eAAeA,CAACP,KAAK,EAAEK,OAAO,EAAE;MAC9B,IAAIA,OAAO,CAACA,OAAO,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;QACjCR,KAAK,CAAChB,YAAY,GAAG,IAAI;QACzBgB,KAAK,CAACZ,cAAc,GAAG,KAAK;MAC9B,CAAC,MAAM;QACLY,KAAK,CAAChB,YAAY,GAAG,KAAK;QAC1BgB,KAAK,CAACZ,cAAc,GAAG,KAAK;MAC9B;IACF,CAAC;IACDqB,kBAAkBA,CAACT,KAAK,EAAEK,OAAO,EAAE;MACjC,IAAIA,OAAO,CAACA,OAAO,CAACK,MAAM,GAAG,CAAC,EAAE;QAC9BV,KAAK,CAACf,eAAe,GAAG,IAAI;QAC5Be,KAAK,CAACX,iBAAiB,GAAG,KAAK;MACjC,CAAC,MAAM;QACLW,KAAK,CAACf,eAAe,GAAG,KAAK;QAC7Be,KAAK,CAACX,iBAAiB,GAAG,KAAK;MACjC;IACF,CAAC;IACDsB,eAAeA,CAACX,KAAK,EAAEK,OAAO,EAAE;MAC9B,IAAId,mBAAmB,CAACc,OAAO,CAACA,OAAO,CAAC,EAAE;QACxCL,KAAK,CAACd,YAAY,GAAG,IAAI;QACzBc,KAAK,CAACV,cAAc,GAAG,KAAK;MAC9B,CAAC,MAAM;QACLU,KAAK,CAACd,YAAY,GAAG,KAAK;QAC1Bc,KAAK,CAACV,cAAc,GAAG,KAAK;MAC9B;IACF;EACF;AACF,CAAC,CAAC;AAEF,eAAeK,iBAAiB,CAACiB,OAAO;AAExC,OAAO,MAAMC,mBAAmB,GAAGlB,iBAAiB,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}