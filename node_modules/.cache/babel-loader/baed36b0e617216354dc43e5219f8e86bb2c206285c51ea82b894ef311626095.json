{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { phoneNumberValidate } from \"../helper/phoneNumberValidate\";\nconst authenticateInitialState = {\n  nameIsValid: false,\n  emailIsValid: false,\n  passwordIsValid: false,\n  phoneIsValid: false,\n  addressIsValid: false,\n  nameIsTouched: true,\n  emailIsTouched: true,\n  passwordIsTouched: true,\n  phoneIsTouched: true,\n  addressIsTouced: true\n};\nconst authenticateSlice = createSlice({\n  name: \"authenticate\",\n  initialState: authenticateInitialState,\n  reducers: {\n    setNameIstouched(state) {\n      state.nameIsTouched = true;\n    },\n    setEmailIsTouched(state) {\n      state.emailIsTouched = true;\n    },\n    setPasswordIsTouched(state) {\n      state.passwordIsTouched = true;\n    },\n    setPhoneIsTouched(state) {\n      state.phoneIsTouched = true;\n    },\n    fullnameValidation(state, payload) {\n      if (payload.payload.trim() !== \"\") {\n        state.nameIsValid = true;\n        state.nameIsTouched = false;\n      } else {\n        state.nameIsValid = false;\n        state.nameIsTouched = false;\n      }\n    },\n    emailValidation(state, payload) {\n      if (payload.payload.includes(\"@\")) {\n        state.emailIsValid = true;\n        state.emailIsTouched = false;\n      } else {\n        state.emailIsValid = false;\n        state.emailIsTouched = false;\n      }\n    },\n    passwordValidation(state, payload) {\n      if (payload.payload.length > 8) {\n        state.passwordIsValid = true;\n        state.passwordIsTouched = false;\n      } else {\n        state.passwordIsValid = false;\n        state.passwordIsTouched = false;\n      }\n    },\n    phoneValidation(state, payload) {\n      if (phoneNumberValidate(payload.payload)) {\n        state.phoneIsValid = true;\n        state.phoneIsTouched = false;\n      } else {\n        state.phoneIsValid = false;\n        state.phoneIsTouched = false;\n      }\n    }\n  }\n});\nexport default authenticateSlice.reducer;\nexport const authenticateActions = authenticateSlice.actions;","map":{"version":3,"names":["createSlice","phoneNumberValidate","authenticateInitialState","nameIsValid","emailIsValid","passwordIsValid","phoneIsValid","addressIsValid","nameIsTouched","emailIsTouched","passwordIsTouched","phoneIsTouched","addressIsTouced","authenticateSlice","name","initialState","reducers","setNameIstouched","state","setEmailIsTouched","setPasswordIsTouched","setPhoneIsTouched","fullnameValidation","payload","trim","emailValidation","includes","passwordValidation","length","phoneValidation","reducer","authenticateActions","actions"],"sources":["D:/NodeJS/assignment-03/client-app/src/store/authenticateSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { phoneNumberValidate } from \"../helper/phoneNumberValidate\";\r\n\r\nconst authenticateInitialState = {\r\n  nameIsValid: false,\r\n  emailIsValid: false,\r\n  passwordIsValid: false,\r\n  phoneIsValid: false,\r\n  addressIsValid: false,\r\n  nameIsTouched: true,\r\n  emailIsTouched: true,\r\n  passwordIsTouched: true,\r\n  phoneIsTouched: true,\r\n  addressIsTouced: true,\r\n};\r\n\r\nconst authenticateSlice = createSlice({\r\n  name: \"authenticate\",\r\n  initialState: authenticateInitialState,\r\n  reducers: {\r\n    setNameIstouched(state) {\r\n      state.nameIsTouched = true;\r\n    },\r\n    setEmailIsTouched(state) {\r\n      state.emailIsTouched = true;\r\n    },\r\n    setPasswordIsTouched(state) {\r\n      state.passwordIsTouched = true;\r\n    },\r\n    setPhoneIsTouched(state) {\r\n      state.phoneIsTouched = true;\r\n    },\r\n\r\n    fullnameValidation(state, payload) {\r\n      if (payload.payload.trim() !== \"\") {\r\n        state.nameIsValid = true;\r\n        state.nameIsTouched = false;\r\n      } else {\r\n        state.nameIsValid = false;\r\n        state.nameIsTouched = false;\r\n      }\r\n    },\r\n    emailValidation(state, payload) {\r\n      if (payload.payload.includes(\"@\")) {\r\n        state.emailIsValid = true;\r\n        state.emailIsTouched = false;\r\n      } else {\r\n        state.emailIsValid = false;\r\n        state.emailIsTouched = false;\r\n      }\r\n    },\r\n    passwordValidation(state, payload) {\r\n      if (payload.payload.length > 8) {\r\n        state.passwordIsValid = true;\r\n        state.passwordIsTouched = false;\r\n      } else {\r\n        state.passwordIsValid = false;\r\n        state.passwordIsTouched = false;\r\n      }\r\n    },\r\n    phoneValidation(state, payload) {\r\n      if (phoneNumberValidate(payload.payload)) {\r\n        state.phoneIsValid = true;\r\n        state.phoneIsTouched = false;\r\n      } else {\r\n        state.phoneIsValid = false;\r\n        state.phoneIsTouched = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default authenticateSlice.reducer;\r\n\r\nexport const authenticateActions = authenticateSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,mBAAmB,QAAQ,+BAA+B;AAEnE,MAAMC,wBAAwB,GAAG;EAC/BC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE,KAAK;EACnBC,eAAe,EAAE,KAAK;EACtBC,YAAY,EAAE,KAAK;EACnBC,cAAc,EAAE,KAAK;EACrBC,aAAa,EAAE,IAAI;EACnBC,cAAc,EAAE,IAAI;EACpBC,iBAAiB,EAAE,IAAI;EACvBC,cAAc,EAAE,IAAI;EACpBC,eAAe,EAAE;AACnB,CAAC;AAED,MAAMC,iBAAiB,GAAGb,WAAW,CAAC;EACpCc,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAEb,wBAAwB;EACtCc,QAAQ,EAAE;IACRC,gBAAgBA,CAACC,KAAK,EAAE;MACtBA,KAAK,CAACV,aAAa,GAAG,IAAI;IAC5B,CAAC;IACDW,iBAAiBA,CAACD,KAAK,EAAE;MACvBA,KAAK,CAACT,cAAc,GAAG,IAAI;IAC7B,CAAC;IACDW,oBAAoBA,CAACF,KAAK,EAAE;MAC1BA,KAAK,CAACR,iBAAiB,GAAG,IAAI;IAChC,CAAC;IACDW,iBAAiBA,CAACH,KAAK,EAAE;MACvBA,KAAK,CAACP,cAAc,GAAG,IAAI;IAC7B,CAAC;IAEDW,kBAAkBA,CAACJ,KAAK,EAAEK,OAAO,EAAE;MACjC,IAAIA,OAAO,CAACA,OAAO,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACjCN,KAAK,CAACf,WAAW,GAAG,IAAI;QACxBe,KAAK,CAACV,aAAa,GAAG,KAAK;MAC7B,CAAC,MAAM;QACLU,KAAK,CAACf,WAAW,GAAG,KAAK;QACzBe,KAAK,CAACV,aAAa,GAAG,KAAK;MAC7B;IACF,CAAC;IACDiB,eAAeA,CAACP,KAAK,EAAEK,OAAO,EAAE;MAC9B,IAAIA,OAAO,CAACA,OAAO,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;QACjCR,KAAK,CAACd,YAAY,GAAG,IAAI;QACzBc,KAAK,CAACT,cAAc,GAAG,KAAK;MAC9B,CAAC,MAAM;QACLS,KAAK,CAACd,YAAY,GAAG,KAAK;QAC1Bc,KAAK,CAACT,cAAc,GAAG,KAAK;MAC9B;IACF,CAAC;IACDkB,kBAAkBA,CAACT,KAAK,EAAEK,OAAO,EAAE;MACjC,IAAIA,OAAO,CAACA,OAAO,CAACK,MAAM,GAAG,CAAC,EAAE;QAC9BV,KAAK,CAACb,eAAe,GAAG,IAAI;QAC5Ba,KAAK,CAACR,iBAAiB,GAAG,KAAK;MACjC,CAAC,MAAM;QACLQ,KAAK,CAACb,eAAe,GAAG,KAAK;QAC7Ba,KAAK,CAACR,iBAAiB,GAAG,KAAK;MACjC;IACF,CAAC;IACDmB,eAAeA,CAACX,KAAK,EAAEK,OAAO,EAAE;MAC9B,IAAItB,mBAAmB,CAACsB,OAAO,CAACA,OAAO,CAAC,EAAE;QACxCL,KAAK,CAACZ,YAAY,GAAG,IAAI;QACzBY,KAAK,CAACP,cAAc,GAAG,KAAK;MAC9B,CAAC,MAAM;QACLO,KAAK,CAACZ,YAAY,GAAG,KAAK;QAC1BY,KAAK,CAACP,cAAc,GAAG,KAAK;MAC9B;IACF;EACF;AACF,CAAC,CAAC;AAEF,eAAeE,iBAAiB,CAACiB,OAAO;AAExC,OAAO,MAAMC,mBAAmB,GAAGlB,iBAAiB,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}