{"ast":null,"code":"import{Link,Form,useActionData,redirect}from\"react-router-dom\";import Card from\"../UI/Card\";import backgroundImage from\"../../images/banner1.jpg\";import styles from\"./SignupForm.module.css\";import{useDispatch,useSelector}from\"react-redux\";import{authenticateActions}from\"../../store/authenticateSlice\";import{useRef}from\"react\";import{phoneNumberValidate}from\"../../helper/phoneNumberValidate\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const SignupForm=()=>{// Khi submit fail sẽ trả về các giá trị để người dùng biết mình nhập sai cái gì\n// và các giá trị đó là giá trị trả về của action nên dùng hook useActionData() để lấy nó\n// data sẽ là object với message thông tin nhập bị sai\nconst data=useActionData();// Tạo dispatch\nconst dispatch=useDispatch();// Lấy các state trong redux để cho việc validate\nconst nameIsValid=useSelector(state=>state.authenticate.nameIsValid);const emailIsValid=useSelector(state=>state.authenticate.emailIsValid);const passwordIsValid=useSelector(state=>state.authenticate.passwordIsValid);const phoneIsValid=useSelector(state=>state.authenticate.phoneIsValid);const nameIsTouched=useSelector(state=>state.authenticate.nameIsTouched);const emailIsTouched=useSelector(state=>state.authenticate.emailIsTouched);const passwordIsTouched=useSelector(state=>state.authenticate.passwordIsTouched);const phoneIsTouched=useSelector(state=>state.authenticate.phoneIsTouched);const emailIsExist=useSelector(state=>state.authenticate.emailIsExist);// Tạo ref để lấy giá trị input\nconst nameRef=useRef();const emailRef=useRef();const passwordRef=useRef();const phoneRef=useRef();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"py-5 \".concat(styles[\"signup-container\"])// Tạo background image cho trang signin\n,style:{backgroundImage:\"url(\".concat(backgroundImage,\")\"),backgroundSize:\"cover\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"container d-flex align-items-center justify-content-center\",children:/*#__PURE__*/_jsxs(Card,{className:\"py-5 w-50 text-center \".concat(styles[\"form\"]),children:[/*#__PURE__*/_jsx(\"h2\",{className:\"py-3 \".concat(styles[\"form-header\"]),children:\"Sign Up\"}),/*#__PURE__*/_jsxs(Form,{method:\"post\",className:\"px-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"my-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control signup-form-input\",placeholder:\"Full Name\",name:\"full-name\",ref:nameRef,onFocus:()=>dispatch(authenticateActions.setNameIstouched()),onBlur:()=>dispatch(authenticateActions.fullnameValidation(nameRef.current.value))}),!nameIsValid&&!nameIsTouched&&/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:\"Name is not valid\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"my-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",placeholder:\"Email\",name:\"email\",ref:emailRef,onFocus:()=>{dispatch(authenticateActions.setEmailIsTouched());dispatch(authenticateActions.setEmailExist());},onBlur:()=>dispatch(authenticateActions.emailValidation(emailRef.current.value))}),!emailIsValid&&!emailIsTouched&&/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:!emailIsExist?\"Email is invalid\":\"Email is exist\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"my-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control\",placeholder:\"Password\",name:\"password\",ref:passwordRef,onFocus:()=>dispatch(authenticateActions.setPasswordIsTouched()),onBlur:()=>dispatch(authenticateActions.passwordValidation(passwordRef.current.value))}),!passwordIsValid&&!passwordIsTouched&&/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:\"Password must be greater than 8 characters\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"my-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",placeholder:\"Phone\",name:\"phone\",ref:phoneRef,onFocus:()=>dispatch(authenticateActions.setPhoneIsTouched()),onBlur:()=>dispatch(authenticateActions.phoneValidation(phoneRef.current.value))}),!phoneIsValid&&!phoneIsTouched&&/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:\"Please enter correct phone number\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles[\"btn-signup\"],children:[data&&/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:data.errMessage}),/*#__PURE__*/_jsx(\"button\",{className:\"btn py-2 d-block w-100 my-5\",children:\"Sign up\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:styles[\"navigate\"],children:[\"Already have an account ? \",/*#__PURE__*/_jsx(Link,{children:\"Click\"})]})]})]})})})});};export default SignupForm;// Tạo action cho Route\nexport async function action(_ref){let{request,params}=_ref;// Lấy data khi submit form. Form của react-router-dom khi submit sẽ không gửi request đến server mà sẽ gửi đến action của Route\nconst req=await request.formData();const user={name:req.get(\"full-name\"),email:req.get(\"email\"),password:req.get(\"password\"),phone:req.get(\"phone\")};// Lấy danh sách các users đã có từ localStorage\nconst prevUserArr=JSON.parse(localStorage.getItem(\"userArr\"));// validate email\nlet checkExistEmail=false;if(prevUserArr){prevUserArr.forEach(u=>{if(u.email===user.email){checkExistEmail=true;}});}// Validate các giá trị lần nữa trước khi submit form\nif(user.name===\"\"||!user.email.includes(\"@\")||user.password.length<8||!phoneNumberValidate(user.phone)||checkExistEmail){// Nếu không vượt qua validate thì sẽ trả về message\nreturn{errMessage:\"Some informations is invalid ! Please recorrect!!\"};}// Nếu trong localStorage có mảng user rồi thì thêm tiếp\nif(prevUserArr){localStorage.setItem(\"userArr\",JSON.stringify([...prevUserArr,user]));// Nếu không thì thêm mới\n}else{localStorage.setItem(\"userArr\",JSON.stringify([user]));}// Khi đã vượt qua validate\n// Xuất thông báo đăng kí thành công\nwindow.alert(\"Sign up success!!\");// Điều hướng tới trang login\nreturn redirect(\"/login\");}","map":{"version":3,"names":["Link","Form","useActionData","redirect","Card","backgroundImage","styles","useDispatch","useSelector","authenticateActions","useRef","phoneNumberValidate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SignupForm","data","dispatch","nameIsValid","state","authenticate","emailIsValid","passwordIsValid","phoneIsValid","nameIsTouched","emailIsTouched","passwordIsTouched","phoneIsTouched","emailIsExist","nameRef","emailRef","passwordRef","phoneRef","children","className","concat","style","backgroundSize","method","type","placeholder","name","ref","onFocus","setNameIstouched","onBlur","fullnameValidation","current","value","setEmailIsTouched","setEmailExist","emailValidation","setPasswordIsTouched","passwordValidation","setPhoneIsTouched","phoneValidation","errMessage","action","_ref","request","params","req","formData","user","get","email","password","phone","prevUserArr","JSON","parse","localStorage","getItem","checkExistEmail","forEach","u","includes","length","setItem","stringify","window","alert"],"sources":["D:/ReactJS/Assignment 03/rjs-asm03/src/components/authenticate/SignupForm.jsx"],"sourcesContent":["import { Link, Form, useActionData, redirect } from \"react-router-dom\";\r\nimport Card from \"../UI/Card\";\r\nimport backgroundImage from \"../../images/banner1.jpg\";\r\nimport styles from \"./SignupForm.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authenticateActions } from \"../../store/authenticateSlice\";\r\nimport { useRef } from \"react\";\r\nimport { phoneNumberValidate } from \"../../helper/phoneNumberValidate\";\r\n\r\nconst SignupForm = () => {\r\n  // Khi submit fail sẽ trả về các giá trị để người dùng biết mình nhập sai cái gì\r\n  // và các giá trị đó là giá trị trả về của action nên dùng hook useActionData() để lấy nó\r\n  // data sẽ là object với message thông tin nhập bị sai\r\n  const data = useActionData();\r\n\r\n  // Tạo dispatch\r\n  const dispatch = useDispatch();\r\n  // Lấy các state trong redux để cho việc validate\r\n  const nameIsValid = useSelector((state) => state.authenticate.nameIsValid);\r\n  const emailIsValid = useSelector((state) => state.authenticate.emailIsValid);\r\n  const passwordIsValid = useSelector(\r\n    (state) => state.authenticate.passwordIsValid\r\n  );\r\n  const phoneIsValid = useSelector((state) => state.authenticate.phoneIsValid);\r\n  const nameIsTouched = useSelector(\r\n    (state) => state.authenticate.nameIsTouched\r\n  );\r\n  const emailIsTouched = useSelector(\r\n    (state) => state.authenticate.emailIsTouched\r\n  );\r\n  const passwordIsTouched = useSelector(\r\n    (state) => state.authenticate.passwordIsTouched\r\n  );\r\n  const phoneIsTouched = useSelector(\r\n    (state) => state.authenticate.phoneIsTouched\r\n  );\r\n  const emailIsExist = useSelector((state) => state.authenticate.emailIsExist);\r\n\r\n  // Tạo ref để lấy giá trị input\r\n  const nameRef = useRef();\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const phoneRef = useRef();\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`py-5 ${styles[\"signup-container\"]}`}\r\n        // Tạo background image cho trang signin\r\n        style={{\r\n          backgroundImage: `url(${backgroundImage})`,\r\n          backgroundSize: \"cover\",\r\n        }}\r\n      >\r\n        <div\r\n          className={`container d-flex align-items-center justify-content-center`}\r\n        >\r\n          <Card className={`py-5 w-50 text-center ${styles[\"form\"]}`}>\r\n            <h2 className={`py-3 ${styles[\"form-header\"]}`}>Sign Up</h2>\r\n\r\n            <Form method=\"post\" className=\"px-5\">\r\n              <div className=\"my-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control signup-form-input\"\r\n                  placeholder=\"Full Name\"\r\n                  name=\"full-name\"\r\n                  ref={nameRef}\r\n                  onFocus={() =>\r\n                    dispatch(authenticateActions.setNameIstouched())\r\n                  }\r\n                  onBlur={() =>\r\n                    dispatch(\r\n                      authenticateActions.fullnameValidation(\r\n                        nameRef.current.value\r\n                      )\r\n                    )\r\n                  }\r\n                />\r\n                {!nameIsValid && !nameIsTouched && (\r\n                  <p className=\"text-danger\">Name is not valid</p>\r\n                )}\r\n              </div>\r\n              <div className=\"my-3\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  ref={emailRef}\r\n                  onFocus={() => {\r\n                    dispatch(authenticateActions.setEmailIsTouched());\r\n                    dispatch(authenticateActions.setEmailExist());\r\n                  }}\r\n                  onBlur={() =>\r\n                    dispatch(\r\n                      authenticateActions.emailValidation(\r\n                        emailRef.current.value\r\n                      )\r\n                    )\r\n                  }\r\n                />\r\n                {!emailIsValid && !emailIsTouched && (\r\n                  <p className=\"text-danger\">\r\n                    {!emailIsExist ? \"Email is invalid\" : \"Email is exist\"}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div className=\"my-3\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  ref={passwordRef}\r\n                  onFocus={() =>\r\n                    dispatch(authenticateActions.setPasswordIsTouched())\r\n                  }\r\n                  onBlur={() =>\r\n                    dispatch(\r\n                      authenticateActions.passwordValidation(\r\n                        passwordRef.current.value\r\n                      )\r\n                    )\r\n                  }\r\n                />\r\n                {!passwordIsValid && !passwordIsTouched && (\r\n                  <p className=\"text-danger\">\r\n                    Password must be greater than 8 characters\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div className=\"my-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Phone\"\r\n                  name=\"phone\"\r\n                  ref={phoneRef}\r\n                  onFocus={() =>\r\n                    dispatch(authenticateActions.setPhoneIsTouched())\r\n                  }\r\n                  onBlur={() =>\r\n                    dispatch(\r\n                      authenticateActions.phoneValidation(\r\n                        phoneRef.current.value\r\n                      )\r\n                    )\r\n                  }\r\n                />\r\n                {!phoneIsValid && !phoneIsTouched && (\r\n                  <p className=\"text-danger\">\r\n                    Please enter correct phone number\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div className={styles[\"btn-signup\"]}>\r\n                {data && <p className=\"text-danger\">{data.errMessage}</p>}\r\n                <button className={`btn py-2 d-block w-100 my-5`}>\r\n                  Sign up\r\n                </button>\r\n              </div>\r\n\r\n              <p className={styles[\"navigate\"]}>\r\n                Already have an account ? <Link>Click</Link>\r\n              </p>\r\n            </Form>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n\r\n// Tạo action cho Route\r\nexport async function action({ request, params }) {\r\n  // Lấy data khi submit form. Form của react-router-dom khi submit sẽ không gửi request đến server mà sẽ gửi đến action của Route\r\n  const req = await request.formData();\r\n  const user = {\r\n    name: req.get(\"full-name\"),\r\n    email: req.get(\"email\"),\r\n    password: req.get(\"password\"),\r\n    phone: req.get(\"phone\"),\r\n  };\r\n\r\n  // Lấy danh sách các users đã có từ localStorage\r\n  const prevUserArr = JSON.parse(localStorage.getItem(\"userArr\"));\r\n  // validate email\r\n  let checkExistEmail = false;\r\n  if (prevUserArr) {\r\n    prevUserArr.forEach((u) => {\r\n      if (u.email === user.email) {\r\n        checkExistEmail = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Validate các giá trị lần nữa trước khi submit form\r\n  if (\r\n    user.name === \"\" ||\r\n    !user.email.includes(\"@\") ||\r\n    user.password.length < 8 ||\r\n    !phoneNumberValidate(user.phone) ||\r\n    checkExistEmail\r\n  ) {\r\n    // Nếu không vượt qua validate thì sẽ trả về message\r\n    return { errMessage: \"Some informations is invalid ! Please recorrect!!\" };\r\n  }\r\n\r\n  // Nếu trong localStorage có mảng user rồi thì thêm tiếp\r\n  if (prevUserArr) {\r\n    localStorage.setItem(\"userArr\", JSON.stringify([...prevUserArr, user]));\r\n    // Nếu không thì thêm mới\r\n  } else {\r\n    localStorage.setItem(\"userArr\", JSON.stringify([user]));\r\n  }\r\n\r\n  // Khi đã vượt qua validate\r\n  // Xuất thông báo đăng kí thành công\r\n  window.alert(\"Sign up success!!\");\r\n  // Điều hướng tới trang login\r\n  return redirect(\"/login\");\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}