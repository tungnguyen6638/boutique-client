{"ast":null,"code":"// Hàm lấy các URL để fetch\nexport function fecthUrl(functionality, params) {\n  const serverDomain = \"http://localhost:5000\";\n  let url = serverDomain;\n  switch (functionality) {\n    case \"POST_LOGIN\":\n      url += \"/auth/login\";\n      break;\n    case \"POST_SIGNUP\":\n      url += \"/auth/signup\";\n      break;\n    default:\n      break;\n  }\n  return url;\n}\n\n// Hàm hỗ trợ fetch data\nexport async function fetchData(requestContent) {\n  const res = await fetch(requestContent.url, {\n    method: requestContent.method ? requestContent.method : \"GET\",\n    headers: requestContent.headers ? requestContent.headers : {},\n    body: requestContent.body ? requestContent.body : {}\n  });\n\n  // Nếu res không ok thì sẽ trả về 1 Object có chứa message và biến hasError để xử lý error\n  if (!res.ok) {\n    return {\n      message: res.statusText,\n      hasError: true\n    };\n  } else {\n    console.log(\"hêr\");\n    return await res.json();\n  }\n}","map":{"version":3,"names":["fecthUrl","functionality","params","serverDomain","url","fetchData","requestContent","res","fetch","method","headers","body","ok","message","statusText","hasError","console","log","json"],"sources":["D:/NodeJS/assignment-03/client-app/src/ultilities/fetch-url.js"],"sourcesContent":["// Hàm lấy các URL để fetch\r\nexport function fecthUrl(functionality, params) {\r\n  const serverDomain = \"http://localhost:5000\";\r\n  let url = serverDomain;\r\n  switch (functionality) {\r\n    case \"POST_LOGIN\":\r\n      url += \"/auth/login\";\r\n      break;\r\n    case \"POST_SIGNUP\":\r\n      url += \"/auth/signup\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return url;\r\n}\r\n\r\n// Hàm hỗ trợ fetch data\r\nexport async function fetchData(requestContent) {\r\n  const res = await fetch(requestContent.url, {\r\n    method: requestContent.method ? requestContent.method : \"GET\",\r\n    headers: requestContent.headers ? requestContent.headers : {},\r\n    body: requestContent.body ? requestContent.body : {},\r\n  });\r\n\r\n  // Nếu res không ok thì sẽ trả về 1 Object có chứa message và biến hasError để xử lý error\r\n  if (!res.ok) {\r\n    return { message: res.statusText, hasError: true };\r\n  } else {\r\n    console.log(\"hêr\");\r\n    return await res.json();\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,SAASA,QAAQA,CAACC,aAAa,EAAEC,MAAM,EAAE;EAC9C,MAAMC,YAAY,GAAG,uBAAuB;EAC5C,IAAIC,GAAG,GAAGD,YAAY;EACtB,QAAQF,aAAa;IACnB,KAAK,YAAY;MACfG,GAAG,IAAI,aAAa;MACpB;IACF,KAAK,aAAa;MAChBA,GAAG,IAAI,cAAc;MACrB;IACF;MACE;EACJ;EAEA,OAAOA,GAAG;AACZ;;AAEA;AACA,OAAO,eAAeC,SAASA,CAACC,cAAc,EAAE;EAC9C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,cAAc,CAACF,GAAG,EAAE;IAC1CK,MAAM,EAAEH,cAAc,CAACG,MAAM,GAAGH,cAAc,CAACG,MAAM,GAAG,KAAK;IAC7DC,OAAO,EAAEJ,cAAc,CAACI,OAAO,GAAGJ,cAAc,CAACI,OAAO,GAAG,CAAC,CAAC;IAC7DC,IAAI,EAAEL,cAAc,CAACK,IAAI,GAAGL,cAAc,CAACK,IAAI,GAAG,CAAC;EACrD,CAAC,CAAC;;EAEF;EACA,IAAI,CAACJ,GAAG,CAACK,EAAE,EAAE;IACX,OAAO;MAAEC,OAAO,EAAEN,GAAG,CAACO,UAAU;MAAEC,QAAQ,EAAE;IAAK,CAAC;EACpD,CAAC,MAAM;IACLC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClB,OAAO,MAAMV,GAAG,CAACW,IAAI,CAAC,CAAC;EACzB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}