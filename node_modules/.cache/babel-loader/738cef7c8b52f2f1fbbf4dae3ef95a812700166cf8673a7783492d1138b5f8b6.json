{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { phoneNumberValidate } from \"../helper/phoneNumberValidate\";\nconst authenticateInitialState = {\n  nameIsValid: false,\n  emailIsValid: false,\n  passwordIsValid: false,\n  phoneIsValid: false,\n  nameIsTouched: true,\n  emailIsTouched: true,\n  passwordIsTouched: true,\n  phoneIsTouched: true,\n  emailIsExist: false,\n  onLogin: {\n    emailExist: false,\n    passwordIncorrect: false\n  }\n};\nconst authenticateSlice = createSlice({\n  name: \"authenticate\",\n  initialState: authenticateInitialState,\n  reducers: {\n    setNameIstouched(state) {\n      state.nameIsTouched = true;\n    },\n    setEmailIsTouched(state) {\n      state.emailIsTouched = true;\n    },\n    setPasswordIsTouched(state) {\n      state.passwordIsTouched = true;\n    },\n    setPhoneIsTouched(state) {\n      state.phoneIsTouched = true;\n    },\n    setEmailExist(state) {\n      state.emailIsExist = false;\n    },\n    fullnameValidation(state, payload) {\n      if (payload.payload.trim() !== \"\") {\n        state.nameIsValid = true;\n        state.nameIsTouched = false;\n      } else {\n        state.nameIsValid = false;\n        state.nameIsTouched = false;\n      }\n    },\n    emailValidation(state, payload) {\n      const users = JSON.parse(localStorage.getItem(\"userArr\"));\n      let checkExistEmail = false;\n      if (users) {\n        users.forEach(user => {\n          if (user.email === payload.payload) {\n            checkExistEmail = true;\n            state.emailIsExist = true;\n          }\n        });\n      }\n      if (payload.payload.includes(\"@\") && !checkExistEmail) {\n        state.emailIsValid = true;\n        state.emailIsTouched = false;\n      } else {\n        state.emailIsValid = false;\n        state.emailIsTouched = false;\n      }\n    },\n    passwordValidation(state, payload) {\n      if (payload.payload.length > 8) {\n        state.passwordIsValid = true;\n        state.passwordIsTouched = false;\n      } else {\n        state.passwordIsValid = false;\n        state.passwordIsTouched = false;\n      }\n    },\n    phoneValidation(state, payload) {\n      if (phoneNumberValidate(payload.payload)) {\n        state.phoneIsValid = true;\n        state.phoneIsTouched = false;\n      } else {\n        state.phoneIsValid = false;\n        state.phoneIsTouched = false;\n      }\n    }\n  }\n});\nexport default authenticateSlice.reducer;\nexport const authenticateActions = authenticateSlice.actions;","map":{"version":3,"names":["createSlice","phoneNumberValidate","authenticateInitialState","nameIsValid","emailIsValid","passwordIsValid","phoneIsValid","nameIsTouched","emailIsTouched","passwordIsTouched","phoneIsTouched","emailIsExist","onLogin","emailExist","passwordIncorrect","authenticateSlice","name","initialState","reducers","setNameIstouched","state","setEmailIsTouched","setPasswordIsTouched","setPhoneIsTouched","setEmailExist","fullnameValidation","payload","trim","emailValidation","users","JSON","parse","localStorage","getItem","checkExistEmail","forEach","user","email","includes","passwordValidation","length","phoneValidation","reducer","authenticateActions","actions"],"sources":["D:/ReactJS/Assignment 03/rjs-asm03/src/store/authenticateSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { phoneNumberValidate } from \"../helper/phoneNumberValidate\";\r\n\r\nconst authenticateInitialState = {\r\n  nameIsValid: false,\r\n  emailIsValid: false,\r\n  passwordIsValid: false,\r\n  phoneIsValid: false,\r\n  nameIsTouched: true,\r\n  emailIsTouched: true,\r\n  passwordIsTouched: true,\r\n  phoneIsTouched: true,\r\n  emailIsExist: false,\r\n  onLogin: {\r\n    emailExist: false,\r\n    passwordIncorrect: false,\r\n  },\r\n};\r\n\r\nconst authenticateSlice = createSlice({\r\n  name: \"authenticate\",\r\n  initialState: authenticateInitialState,\r\n  reducers: {\r\n    setNameIstouched(state) {\r\n      state.nameIsTouched = true;\r\n    },\r\n    setEmailIsTouched(state) {\r\n      state.emailIsTouched = true;\r\n    },\r\n    setPasswordIsTouched(state) {\r\n      state.passwordIsTouched = true;\r\n    },\r\n    setPhoneIsTouched(state) {\r\n      state.phoneIsTouched = true;\r\n    },\r\n    setEmailExist(state) {\r\n      state.emailIsExist = false;\r\n    },\r\n    fullnameValidation(state, payload) {\r\n      if (payload.payload.trim() !== \"\") {\r\n        state.nameIsValid = true;\r\n        state.nameIsTouched = false;\r\n      } else {\r\n        state.nameIsValid = false;\r\n        state.nameIsTouched = false;\r\n      }\r\n    },\r\n    emailValidation(state, payload) {\r\n      const users = JSON.parse(localStorage.getItem(\"userArr\"));\r\n      let checkExistEmail = false;\r\n      if (users) {\r\n        users.forEach((user) => {\r\n          if (user.email === payload.payload) {\r\n            checkExistEmail = true;\r\n            state.emailIsExist = true;\r\n          }\r\n        });\r\n      }\r\n\r\n      if (payload.payload.includes(\"@\") && !checkExistEmail) {\r\n        state.emailIsValid = true;\r\n        state.emailIsTouched = false;\r\n      } else {\r\n        state.emailIsValid = false;\r\n        state.emailIsTouched = false;\r\n      }\r\n    },\r\n    passwordValidation(state, payload) {\r\n      if (payload.payload.length > 8) {\r\n        state.passwordIsValid = true;\r\n        state.passwordIsTouched = false;\r\n      } else {\r\n        state.passwordIsValid = false;\r\n        state.passwordIsTouched = false;\r\n      }\r\n    },\r\n    phoneValidation(state, payload) {\r\n      if (phoneNumberValidate(payload.payload)) {\r\n        state.phoneIsValid = true;\r\n        state.phoneIsTouched = false;\r\n      } else {\r\n        state.phoneIsValid = false;\r\n        state.phoneIsTouched = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default authenticateSlice.reducer;\r\n\r\nexport const authenticateActions = authenticateSlice.actions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}