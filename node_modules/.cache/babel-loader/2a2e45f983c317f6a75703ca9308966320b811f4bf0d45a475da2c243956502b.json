{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import{phoneNumberValidate}from\"../helper/phoneNumberValidate\";const authenticateInitialState={nameIsValid:false,emailIsValid:false,passwordIsValid:false,phoneIsValid:false,nameIsTouched:true,emailIsTouched:true,passwordIsTouched:true,phoneIsTouched:true,emailIsExist:false};const authenticateSlice=createSlice({name:\"authenticate\",initialState:authenticateInitialState,reducers:{setNameIstouched(state){state.nameIsTouched=true;},setEmailIsTouched(state){state.emailIsTouched=true;},setPasswordIsTouched(state){state.passwordIsTouched=true;},setPhoneIsTouched(state){state.phoneIsTouched=true;},setEmailExist(state){state.emailIsExist=false;},fullnameValidation(state,payload){if(payload.payload.trim()!==\"\"){state.nameIsValid=true;state.nameIsTouched=false;}else{state.nameIsValid=false;state.nameIsTouched=false;}},emailValidation(state,payload){const users=JSON.parse(localStorage.getItem(\"userArr\"));let checkExistEmail=false;if(users){users.forEach(user=>{if(user.email===payload.payload){checkExistEmail=true;state.emailIsExist=true;}});}if(payload.payload.includes(\"@\")&&!checkExistEmail){state.emailIsValid=true;state.emailIsTouched=false;}else{state.emailIsValid=false;state.emailIsTouched=false;}},passwordValidation(state,payload){if(payload.payload.length>8){state.passwordIsValid=true;state.passwordIsTouched=false;}else{state.passwordIsValid=false;state.passwordIsTouched=false;}},phoneValidation(state,payload){if(phoneNumberValidate(payload.payload)){state.phoneIsValid=true;state.phoneIsTouched=false;}else{state.phoneIsValid=false;state.phoneIsTouched=false;}}}});export default authenticateSlice.reducer;export const authenticateActions=authenticateSlice.actions;","map":{"version":3,"names":["createSlice","phoneNumberValidate","authenticateInitialState","nameIsValid","emailIsValid","passwordIsValid","phoneIsValid","nameIsTouched","emailIsTouched","passwordIsTouched","phoneIsTouched","emailIsExist","authenticateSlice","name","initialState","reducers","setNameIstouched","state","setEmailIsTouched","setPasswordIsTouched","setPhoneIsTouched","setEmailExist","fullnameValidation","payload","trim","emailValidation","users","JSON","parse","localStorage","getItem","checkExistEmail","forEach","user","email","includes","passwordValidation","length","phoneValidation","reducer","authenticateActions","actions"],"sources":["D:/ReactJS/Assignment 03/rjs-asm03/src/store/authenticateSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { phoneNumberValidate } from \"../helper/phoneNumberValidate\";\r\n\r\nconst authenticateInitialState = {\r\n  nameIsValid: false,\r\n  emailIsValid: false,\r\n  passwordIsValid: false,\r\n  phoneIsValid: false,\r\n  nameIsTouched: true,\r\n  emailIsTouched: true,\r\n  passwordIsTouched: true,\r\n  phoneIsTouched: true,\r\n  emailIsExist: false,\r\n};\r\n\r\nconst authenticateSlice = createSlice({\r\n  name: \"authenticate\",\r\n  initialState: authenticateInitialState,\r\n  reducers: {\r\n    setNameIstouched(state) {\r\n      state.nameIsTouched = true;\r\n    },\r\n    setEmailIsTouched(state) {\r\n      state.emailIsTouched = true;\r\n    },\r\n    setPasswordIsTouched(state) {\r\n      state.passwordIsTouched = true;\r\n    },\r\n    setPhoneIsTouched(state) {\r\n      state.phoneIsTouched = true;\r\n    },\r\n    setEmailExist(state) {\r\n      state.emailIsExist = false;\r\n    },\r\n    fullnameValidation(state, payload) {\r\n      if (payload.payload.trim() !== \"\") {\r\n        state.nameIsValid = true;\r\n        state.nameIsTouched = false;\r\n      } else {\r\n        state.nameIsValid = false;\r\n        state.nameIsTouched = false;\r\n      }\r\n    },\r\n    emailValidation(state, payload) {\r\n      const users = JSON.parse(localStorage.getItem(\"userArr\"));\r\n      let checkExistEmail = false;\r\n      if (users) {\r\n        users.forEach((user) => {\r\n          if (user.email === payload.payload) {\r\n            checkExistEmail = true;\r\n            state.emailIsExist = true;\r\n          }\r\n        });\r\n      }\r\n\r\n      if (payload.payload.includes(\"@\") && !checkExistEmail) {\r\n        state.emailIsValid = true;\r\n        state.emailIsTouched = false;\r\n      } else {\r\n        state.emailIsValid = false;\r\n        state.emailIsTouched = false;\r\n      }\r\n    },\r\n    passwordValidation(state, payload) {\r\n      if (payload.payload.length > 8) {\r\n        state.passwordIsValid = true;\r\n        state.passwordIsTouched = false;\r\n      } else {\r\n        state.passwordIsValid = false;\r\n        state.passwordIsTouched = false;\r\n      }\r\n    },\r\n    phoneValidation(state, payload) {\r\n      if (phoneNumberValidate(payload.payload)) {\r\n        state.phoneIsValid = true;\r\n        state.phoneIsTouched = false;\r\n      } else {\r\n        state.phoneIsValid = false;\r\n        state.phoneIsTouched = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default authenticateSlice.reducer;\r\n\r\nexport const authenticateActions = authenticateSlice.actions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}