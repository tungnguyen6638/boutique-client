{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartInitialState = {\n  listCart: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: cartInitialState,\n  reducers: {\n    addCart(state, payload) {\n      if (state.listCart.length === 0) {\n        state.listCart.push(payload.payload);\n      } else {\n        let itemExist = false;\n        state.listCart = state.listCart.map(cart => {\n          if (cart.product[\"_id\"][\"$oid\"] === payload.payload.product[\"_id\"][\"$oid\"]) {\n            return {\n              product: cart.product,\n              quantity: Number(cart.quantity) + Number(payload.payload.quantity),\n              total: Number(cart.total) + Number(payload.payload.total)\n            };\n          } else {\n            itemExist = true;\n          }\n        });\n        if (itemExist) {\n          state.listCart.push(payload.payload);\n        }\n      }\n      localStorage.setItem(\"cartArr\", JSON.stringify(state.listCart));\n      // else {\n      //   state.listCart.map((cart) => {\n      //     if (\n      //       cart.product[\"_id\"][\"$oid\"] ===\n      //       payload.payload.product[\"_id\"][\"$oid\"]\n      //     ) {\n      //       return {\n      //         product: cart.product,\n      //         quantity: cart.quantity + payload.payload.quantity,\n      //         total: cart.total + payload.payload.total,\n      //       };\n      //     }else {\n\n      //     }\n      //   });\n      // }\n    },\n    updateCart(state, payload) {\n      state.listCart = state.listCart.map(cart => {\n        if (state.listCart.name === payload.payload.name) {\n          return payload.payload;\n        } else {\n          return cart;\n        }\n      });\n    },\n    deleteCart(state, payload) {\n      state.listCart = state.listCart.pop(payload.payload);\n    }\n  }\n});\nexport default cartSlice.reducer;\nexport const cartActions = cartSlice.actions;","map":{"version":3,"names":["createSlice","cartInitialState","listCart","cartSlice","name","initialState","reducers","addCart","state","payload","length","push","itemExist","map","cart","product","quantity","Number","total","localStorage","setItem","JSON","stringify","updateCart","deleteCart","pop","reducer","cartActions","actions"],"sources":["D:/ReactJS/Assignment 03/rjs-asm03/src/store/cartSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartInitialState = {\r\n  listCart: [],\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: cartInitialState,\r\n  reducers: {\r\n    addCart(state, payload) {\r\n      if (state.listCart.length === 0) {\r\n        state.listCart.push(payload.payload);\r\n      } else {\r\n        let itemExist = false;\r\n        state.listCart = state.listCart.map((cart) => {\r\n          if (\r\n            cart.product[\"_id\"][\"$oid\"] ===\r\n            payload.payload.product[\"_id\"][\"$oid\"]\r\n          ) {\r\n            return {\r\n              product: cart.product,\r\n              quantity:\r\n                Number(cart.quantity) + Number(payload.payload.quantity),\r\n              total: Number(cart.total) + Number(payload.payload.total),\r\n            };\r\n          } else {\r\n            itemExist = true;\r\n          }\r\n        });\r\n        if (itemExist) {\r\n          state.listCart.push(payload.payload);\r\n        }\r\n      }\r\n\r\n      localStorage.setItem(\"cartArr\", JSON.stringify(state.listCart));\r\n      // else {\r\n      //   state.listCart.map((cart) => {\r\n      //     if (\r\n      //       cart.product[\"_id\"][\"$oid\"] ===\r\n      //       payload.payload.product[\"_id\"][\"$oid\"]\r\n      //     ) {\r\n      //       return {\r\n      //         product: cart.product,\r\n      //         quantity: cart.quantity + payload.payload.quantity,\r\n      //         total: cart.total + payload.payload.total,\r\n      //       };\r\n      //     }else {\r\n\r\n      //     }\r\n      //   });\r\n      // }\r\n    },\r\n    updateCart(state, payload) {\r\n      state.listCart = state.listCart.map((cart) => {\r\n        if (state.listCart.name === payload.payload.name) {\r\n          return payload.payload;\r\n        } else {\r\n          return cart;\r\n        }\r\n      });\r\n    },\r\n    deleteCart(state, payload) {\r\n      state.listCart = state.listCart.pop(payload.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport default cartSlice.reducer;\r\n\r\nexport const cartActions = cartSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EACvBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,OAAO,EAAE;MACtB,IAAID,KAAK,CAACN,QAAQ,CAACQ,MAAM,KAAK,CAAC,EAAE;QAC/BF,KAAK,CAACN,QAAQ,CAACS,IAAI,CAACF,OAAO,CAACA,OAAO,CAAC;MACtC,CAAC,MAAM;QACL,IAAIG,SAAS,GAAG,KAAK;QACrBJ,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACW,GAAG,CAAEC,IAAI,IAAK;UAC5C,IACEA,IAAI,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAC3BN,OAAO,CAACA,OAAO,CAACM,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,EACtC;YACA,OAAO;cACLA,OAAO,EAAED,IAAI,CAACC,OAAO;cACrBC,QAAQ,EACNC,MAAM,CAACH,IAAI,CAACE,QAAQ,CAAC,GAAGC,MAAM,CAACR,OAAO,CAACA,OAAO,CAACO,QAAQ,CAAC;cAC1DE,KAAK,EAAED,MAAM,CAACH,IAAI,CAACI,KAAK,CAAC,GAAGD,MAAM,CAACR,OAAO,CAACA,OAAO,CAACS,KAAK;YAC1D,CAAC;UACH,CAAC,MAAM;YACLN,SAAS,GAAG,IAAI;UAClB;QACF,CAAC,CAAC;QACF,IAAIA,SAAS,EAAE;UACbJ,KAAK,CAACN,QAAQ,CAACS,IAAI,CAACF,OAAO,CAACA,OAAO,CAAC;QACtC;MACF;MAEAU,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACd,KAAK,CAACN,QAAQ,CAAC,CAAC;MAC/D;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;IACF,CAAC;IACDqB,UAAUA,CAACf,KAAK,EAAEC,OAAO,EAAE;MACzBD,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACW,GAAG,CAAEC,IAAI,IAAK;QAC5C,IAAIN,KAAK,CAACN,QAAQ,CAACE,IAAI,KAAKK,OAAO,CAACA,OAAO,CAACL,IAAI,EAAE;UAChD,OAAOK,OAAO,CAACA,OAAO;QACxB,CAAC,MAAM;UACL,OAAOK,IAAI;QACb;MACF,CAAC,CAAC;IACJ,CAAC;IACDU,UAAUA,CAAChB,KAAK,EAAEC,OAAO,EAAE;MACzBD,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACuB,GAAG,CAAChB,OAAO,CAACA,OAAO,CAAC;IACtD;EACF;AACF,CAAC,CAAC;AAEF,eAAeN,SAAS,CAACuB,OAAO;AAEhC,OAAO,MAAMC,WAAW,GAAGxB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}