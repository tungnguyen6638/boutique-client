{"ast":null,"code":"var _jsxFileName = \"D:\\\\NodeJS\\\\assignment-03\\\\client-app\\\\src\\\\components\\\\authenticate\\\\SigninForm.jsx\",\n  _s = $RefreshSig$();\nimport Card from \"../UI/Card\";\nimport backgroundImage from \"../../images/banner1.jpg\";\nimport styles from \"./SigninForm.module.css\";\nimport { Form, Link, redirect, useActionData } from \"react-router-dom\";\nimport { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authenticateActions } from \"../../store/authenticateSlice\";\nimport { fecthUrl, fetchData } from \"../../ultilities/fetch-url\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SigninForm = () => {\n  _s();\n  // Action data để lấy các dữ liệu trả về từ action\n  const actionData = useActionData();\n\n  // Tạo dispatch để dispatch giá trị cho redux\n  const dispatch = useDispatch();\n  // Lấy các state trong redux để cho việc validate\n  const emailIsValid = useSelector(state => state.authenticate.emailIsValid);\n  const passwordIsValid = useSelector(state => state.authenticate.passwordIsValid);\n  const emailIsTouched = useSelector(state => state.authenticate.emailIsTouched);\n  const emailIsExist = useSelector(state => state.authenticate.emailIsExist);\n  const passwordIsTouched = useSelector(state => state.authenticate.passwordIsTouched);\n  // Tạo ref để lấy giá trị input\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  // Dùng useEffect để khi actionData thay đổi (khi submit fail) sẽ xóa dòng password nếu người dùng nhập sai password\n  useEffect(() => {\n    if (actionData && actionData.errMessage) {\n      document.querySelector(\".signin-password\").value = \"\";\n    }\n  }, [actionData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `py-5 ${styles[\"signin-container\"]}`\n      // Tạo background image cho trang signin\n      ,\n      style: {\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundSize: \"cover\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `container d-flex align-items-center justify-content-center`,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: `py-5 w-50 text-center ${styles[\"form\"]}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: `py-3 ${styles[\"form-header\"]}`,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            method: \"post\",\n            className: \"px-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"my-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                placeholder: \"Email\",\n                name: \"email\",\n                ref: emailRef\n                // Khi focus vào input thì sẽ set isTouched của email input để xóa error message\n                ,\n                onFocus: () => {\n                  dispatch(authenticateActions.setEmailIsTouched());\n                }\n                // Khi không focus vào input thì sẽ validate email input\n                ,\n                onBlur: () => dispatch(authenticateActions.emailValidation(emailRef.current.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), !emailIsValid && !emailIsTouched && !emailIsExist && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-danger\",\n                children: \"Email is invalid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"my-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control signin-password\",\n                placeholder: \"Password\",\n                name: \"password\",\n                ref: passwordRef\n                // Khi focus vào input thì sẽ set isTouched của password input để xóa error message\n                ,\n                onFocus: () => dispatch(authenticateActions.setPasswordIsTouched())\n                // Khi không focus vào input thì sẽ validate password input\n                ,\n                onBlur: () => dispatch(authenticateActions.passwordValidation(passwordRef.current.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), !passwordIsValid && !passwordIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-danger\",\n                children: \"Password must be greater than 8 characters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles[\"btn-signin\"],\n              children: [actionData && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-danger\",\n                children: actionData.errMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `btn py-2 d-block w-100 my-5`,\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles[\"navigate\"],\n              children: [\"Create an account ? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/register\",\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SigninForm, \"N2caafHVs1+CDtlZakz6IatQDKA=\", false, function () {\n  return [useActionData, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = SigninForm;\nexport default SigninForm;\n\n// Tạo action cho Route\nexport async function action({\n  request,\n  params\n}) {\n  // Lấy data khi submit form. Form của react-router-dom khi submit sẽ không gửi request đến server mà sẽ gửi đến action của Route\n  const req = await request.formData();\n  const userLogin = {\n    email: req.get(\"email\"),\n    password: req.get(\"password\")\n  };\n\n  // Gọi api POST login ở server\n  const res = await fetchData({\n    url: fecthUrl(\"POST_LOGIN\"),\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userLogin)\n  });\n  if (res.hasError) {\n    return {\n      errMessage: res.message\n    };\n  } else {\n    // Set expires time cho cookies\n    let now = new Date();\n    let time = now.getTime();\n    let expireTime = time + 1000 * 36000;\n    now.setTime(expireTime);\n    // Lưu email và username vào cookies\n    document.cookie = `email=${res.user.email};expires=${now.toUTCString()}`;\n    document.cookie = `username=${res.user.username};expires=${now.toUTCString()}`;\n    console.log(document.cookie);\n    // Xuất thông báo đăng nhập thành công\n    window.alert(res.message);\n    // Điều hướng tới trang chủ\n    return redirect(\"/\");\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"SigninForm\");","map":{"version":3,"names":["Card","backgroundImage","styles","Form","Link","redirect","useActionData","useEffect","useRef","useDispatch","useSelector","authenticateActions","fecthUrl","fetchData","jsxDEV","_jsxDEV","Fragment","_Fragment","SigninForm","_s","actionData","dispatch","emailIsValid","state","authenticate","passwordIsValid","emailIsTouched","emailIsExist","passwordIsTouched","emailRef","passwordRef","errMessage","document","querySelector","value","children","className","style","backgroundSize","fileName","_jsxFileName","lineNumber","columnNumber","method","type","placeholder","name","ref","onFocus","setEmailIsTouched","onBlur","emailValidation","current","setPasswordIsTouched","passwordValidation","to","_c","action","request","params","req","formData","userLogin","email","get","password","res","url","headers","body","JSON","stringify","hasError","message","now","Date","time","getTime","expireTime","setTime","cookie","user","toUTCString","username","console","log","window","alert","$RefreshReg$"],"sources":["D:/NodeJS/assignment-03/client-app/src/components/authenticate/SigninForm.jsx"],"sourcesContent":["import Card from \"../UI/Card\";\r\nimport backgroundImage from \"../../images/banner1.jpg\";\r\nimport styles from \"./SigninForm.module.css\";\r\nimport { Form, Link, redirect, useActionData } from \"react-router-dom\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authenticateActions } from \"../../store/authenticateSlice\";\r\nimport { fecthUrl, fetchData } from \"../../ultilities/fetch-url\";\r\n\r\nconst SigninForm = () => {\r\n  // Action data để lấy các dữ liệu trả về từ action\r\n  const actionData = useActionData();\r\n\r\n  // Tạo dispatch để dispatch giá trị cho redux\r\n  const dispatch = useDispatch();\r\n  // Lấy các state trong redux để cho việc validate\r\n  const emailIsValid = useSelector((state) => state.authenticate.emailIsValid);\r\n  const passwordIsValid = useSelector(\r\n    (state) => state.authenticate.passwordIsValid\r\n  );\r\n  const emailIsTouched = useSelector(\r\n    (state) => state.authenticate.emailIsTouched\r\n  );\r\n  const emailIsExist = useSelector((state) => state.authenticate.emailIsExist);\r\n  const passwordIsTouched = useSelector(\r\n    (state) => state.authenticate.passwordIsTouched\r\n  );\r\n  // Tạo ref để lấy giá trị input\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  // Dùng useEffect để khi actionData thay đổi (khi submit fail) sẽ xóa dòng password nếu người dùng nhập sai password\r\n  useEffect(() => {\r\n    if (actionData && actionData.errMessage) {\r\n      document.querySelector(\".signin-password\").value = \"\";\r\n    }\r\n  }, [actionData]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`py-5 ${styles[\"signin-container\"]}`}\r\n        // Tạo background image cho trang signin\r\n        style={{\r\n          backgroundImage: `url(${backgroundImage})`,\r\n          backgroundSize: \"cover\",\r\n        }}\r\n      >\r\n        <div\r\n          className={`container d-flex align-items-center justify-content-center`}\r\n        >\r\n          <Card className={`py-5 w-50 text-center ${styles[\"form\"]}`}>\r\n            <h2 className={`py-3 ${styles[\"form-header\"]}`}>Sign In</h2>\r\n\r\n            <Form method=\"post\" className=\"px-5\">\r\n              <div className=\"my-3\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  ref={emailRef}\r\n                  // Khi focus vào input thì sẽ set isTouched của email input để xóa error message\r\n                  onFocus={() => {\r\n                    dispatch(authenticateActions.setEmailIsTouched());\r\n                  }}\r\n                  // Khi không focus vào input thì sẽ validate email input\r\n                  onBlur={() =>\r\n                    dispatch(\r\n                      authenticateActions.emailValidation(\r\n                        emailRef.current.value\r\n                      )\r\n                    )\r\n                  }\r\n                />\r\n                {/* Xuất ra thông báo nếu email không hợp lệ */}\r\n                {!emailIsValid && !emailIsTouched && !emailIsExist && (\r\n                  <p className=\"text-danger\">Email is invalid</p>\r\n                )}\r\n              </div>\r\n              <div className=\"my-3\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control signin-password\"\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  ref={passwordRef}\r\n                  // Khi focus vào input thì sẽ set isTouched của password input để xóa error message\r\n                  onFocus={() =>\r\n                    dispatch(authenticateActions.setPasswordIsTouched())\r\n                  }\r\n                  // Khi không focus vào input thì sẽ validate password input\r\n                  onBlur={() =>\r\n                    dispatch(\r\n                      authenticateActions.passwordValidation(\r\n                        passwordRef.current.value\r\n                      )\r\n                    )\r\n                  }\r\n                />\r\n                {/* Xuất ra thông báo nếu người dùng nhập password dưới 8 kí tự */}\r\n                {!passwordIsValid && !passwordIsTouched && (\r\n                  <p className=\"text-danger\">\r\n                    Password must be greater than 8 characters\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className={styles[\"btn-signin\"]}>\r\n                {actionData && (\r\n                  <p className=\"text-danger\">{actionData.errMessage}</p>\r\n                )}\r\n                <button className={`btn py-2 d-block w-100 my-5`}>\r\n                  Sign in\r\n                </button>\r\n              </div>\r\n\r\n              <p className={styles[\"navigate\"]}>\r\n                Create an account ? <Link to=\"/register\">Sign up</Link>\r\n              </p>\r\n            </Form>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SigninForm;\r\n\r\n// Tạo action cho Route\r\nexport async function action({ request, params }) {\r\n  // Lấy data khi submit form. Form của react-router-dom khi submit sẽ không gửi request đến server mà sẽ gửi đến action của Route\r\n  const req = await request.formData();\r\n  const userLogin = {\r\n    email: req.get(\"email\"),\r\n    password: req.get(\"password\"),\r\n  };\r\n\r\n  // Gọi api POST login ở server\r\n  const res = await fetchData({\r\n    url: fecthUrl(\"POST_LOGIN\"),\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(userLogin),\r\n  });\r\n\r\n  if (res.hasError) {\r\n    return { errMessage: res.message };\r\n  } else {\r\n    // Set expires time cho cookies\r\n    let now = new Date();\r\n    let time = now.getTime();\r\n    let expireTime = time + 1000 * 36000;\r\n    now.setTime(expireTime);\r\n    // Lưu email và username vào cookies\r\n    document.cookie = `email=${res.user.email};expires=${now.toUTCString()}`;\r\n    document.cookie = `username=${\r\n      res.user.username\r\n    };expires=${now.toUTCString()}`;\r\n    console.log(document.cookie);\r\n    // Xuất thông báo đăng nhập thành công\r\n    window.alert(res.message);\r\n    // Điều hướng tới trang chủ\r\n    return redirect(\"/\");\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}