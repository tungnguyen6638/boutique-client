{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst authenticateInitialState = {\n  nameIsValid: false,\n  emailIsValid: false,\n  passwordIsValid: false,\n  nameIsTouched: true,\n  emailIsTouched: true,\n  passwordIsTouched: true\n};\nconst authenticateSlice = createSlice({\n  name: \"authenticate\",\n  initialState: authenticateInitialState,\n  reducers: {\n    setNameIstouched(state) {\n      state.nameIsTouched = true;\n    },\n    setEmailIsTouched(state) {\n      state.emailIsTouched = true;\n    },\n    setPasswordIsTouched(state) {\n      state.passwordIsTouched = true;\n    },\n    fullnameValidation(state, payload) {\n      if (payload.payload.trim() !== \"\") {\n        state.nameIsValid = true;\n        state.nameIsTouched = false;\n      } else {\n        state.nameIsValid = false;\n        state.nameIsTouched = false;\n      }\n    },\n    emailValidation(state, payload) {\n      if (payload.payload.includes(\"@\")) {\n        state.emailIsValid = true;\n        state.emailIsTouched = false;\n      } else {\n        state.emailIsValid = false;\n        state.emailIsTouched = false;\n      }\n    },\n    passwordValidation(state, payload) {\n      if (payload.payload.length > 8) {\n        state.passwordIsValid = true;\n        state.passwordIsTouched = false;\n      } else {\n        state.passwordIsValid = false;\n        state.passwordIsTouched = false;\n      }\n    },\n    phoneValidation(state, payload) {\n      payload.payload.length > 12 ? state.isValid = false : state.isValid = true;\n    }\n  }\n});\nexport default authenticateSlice.reducer;\nexport const authenticateActions = authenticateSlice.actions;","map":{"version":3,"names":["createSlice","authenticateInitialState","nameIsValid","emailIsValid","passwordIsValid","nameIsTouched","emailIsTouched","passwordIsTouched","authenticateSlice","name","initialState","reducers","setNameIstouched","state","setEmailIsTouched","setPasswordIsTouched","fullnameValidation","payload","trim","emailValidation","includes","passwordValidation","length","phoneValidation","isValid","reducer","authenticateActions","actions"],"sources":["D:/ReactJS/Assignment 03/rjs-asm03/src/store/authenticateSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst authenticateInitialState = {\r\n  nameIsValid: false,\r\n  emailIsValid: false,\r\n  passwordIsValid: false,\r\n  nameIsTouched: true,\r\n  emailIsTouched: true,\r\n  passwordIsTouched: true,\r\n};\r\n\r\nconst authenticateSlice = createSlice({\r\n  name: \"authenticate\",\r\n  initialState: authenticateInitialState,\r\n  reducers: {\r\n    setNameIstouched(state) {\r\n      state.nameIsTouched = true;\r\n    },\r\n    setEmailIsTouched(state) {\r\n      state.emailIsTouched = true;\r\n    },\r\n    setPasswordIsTouched(state) {\r\n      state.passwordIsTouched = true;\r\n    },\r\n    fullnameValidation(state, payload) {\r\n      if (payload.payload.trim() !== \"\") {\r\n        state.nameIsValid = true;\r\n        state.nameIsTouched = false;\r\n      } else {\r\n        state.nameIsValid = false;\r\n        state.nameIsTouched = false;\r\n      }\r\n    },\r\n    emailValidation(state, payload) {\r\n      if (payload.payload.includes(\"@\")) {\r\n        state.emailIsValid = true;\r\n        state.emailIsTouched = false;\r\n      } else {\r\n        state.emailIsValid = false;\r\n        state.emailIsTouched = false;\r\n      }\r\n    },\r\n    passwordValidation(state, payload) {\r\n      if (payload.payload.length > 8) {\r\n        state.passwordIsValid = true;\r\n        state.passwordIsTouched = false;\r\n      } else {\r\n        state.passwordIsValid = false;\r\n        state.passwordIsTouched = false;\r\n      }\r\n    },\r\n    phoneValidation(state, payload) {\r\n      payload.payload.length > 12\r\n        ? (state.isValid = false)\r\n        : (state.isValid = true);\r\n    },\r\n  },\r\n});\r\n\r\nexport default authenticateSlice.reducer;\r\n\r\nexport const authenticateActions = authenticateSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,wBAAwB,GAAG;EAC/BC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE,KAAK;EACnBC,eAAe,EAAE,KAAK;EACtBC,aAAa,EAAE,IAAI;EACnBC,cAAc,EAAE,IAAI;EACpBC,iBAAiB,EAAE;AACrB,CAAC;AAED,MAAMC,iBAAiB,GAAGR,WAAW,CAAC;EACpCS,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAET,wBAAwB;EACtCU,QAAQ,EAAE;IACRC,gBAAgBA,CAACC,KAAK,EAAE;MACtBA,KAAK,CAACR,aAAa,GAAG,IAAI;IAC5B,CAAC;IACDS,iBAAiBA,CAACD,KAAK,EAAE;MACvBA,KAAK,CAACP,cAAc,GAAG,IAAI;IAC7B,CAAC;IACDS,oBAAoBA,CAACF,KAAK,EAAE;MAC1BA,KAAK,CAACN,iBAAiB,GAAG,IAAI;IAChC,CAAC;IACDS,kBAAkBA,CAACH,KAAK,EAAEI,OAAO,EAAE;MACjC,IAAIA,OAAO,CAACA,OAAO,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACjCL,KAAK,CAACX,WAAW,GAAG,IAAI;QACxBW,KAAK,CAACR,aAAa,GAAG,KAAK;MAC7B,CAAC,MAAM;QACLQ,KAAK,CAACX,WAAW,GAAG,KAAK;QACzBW,KAAK,CAACR,aAAa,GAAG,KAAK;MAC7B;IACF,CAAC;IACDc,eAAeA,CAACN,KAAK,EAAEI,OAAO,EAAE;MAC9B,IAAIA,OAAO,CAACA,OAAO,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;QACjCP,KAAK,CAACV,YAAY,GAAG,IAAI;QACzBU,KAAK,CAACP,cAAc,GAAG,KAAK;MAC9B,CAAC,MAAM;QACLO,KAAK,CAACV,YAAY,GAAG,KAAK;QAC1BU,KAAK,CAACP,cAAc,GAAG,KAAK;MAC9B;IACF,CAAC;IACDe,kBAAkBA,CAACR,KAAK,EAAEI,OAAO,EAAE;MACjC,IAAIA,OAAO,CAACA,OAAO,CAACK,MAAM,GAAG,CAAC,EAAE;QAC9BT,KAAK,CAACT,eAAe,GAAG,IAAI;QAC5BS,KAAK,CAACN,iBAAiB,GAAG,KAAK;MACjC,CAAC,MAAM;QACLM,KAAK,CAACT,eAAe,GAAG,KAAK;QAC7BS,KAAK,CAACN,iBAAiB,GAAG,KAAK;MACjC;IACF,CAAC;IACDgB,eAAeA,CAACV,KAAK,EAAEI,OAAO,EAAE;MAC9BA,OAAO,CAACA,OAAO,CAACK,MAAM,GAAG,EAAE,GACtBT,KAAK,CAACW,OAAO,GAAG,KAAK,GACrBX,KAAK,CAACW,OAAO,GAAG,IAAK;IAC5B;EACF;AACF,CAAC,CAAC;AAEF,eAAehB,iBAAiB,CAACiB,OAAO;AAExC,OAAO,MAAMC,mBAAmB,GAAGlB,iBAAiB,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}